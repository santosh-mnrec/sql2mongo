//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Poc and Personal\QueryLanguage\Query.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="QueryParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IQueryVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] QueryParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.select_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelect_stmt([NotNull] QueryParser.Select_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.from_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFrom_stmt([NotNull] QueryParser.From_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.where_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhere_stmt([NotNull] QueryParser.Where_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.limit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLimit_stmt([NotNull] QueryParser.Limit_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.search_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSearch_condition([NotNull] QueryParser.Search_conditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicate([NotNull] QueryParser.PredicateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison_predicate([NotNull] QueryParser.Comparison_predicateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.function_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_predicate([NotNull] QueryParser.Function_predicateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] QueryParser.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="QueryParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquals([NotNull] QueryParser.EqualsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotEqual</c>
	/// labeled alternative in <see cref="QueryParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotEqual([NotNull] QueryParser.NotEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.range_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRange_op([NotNull] QueryParser.Range_opContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>greaterThanNumber</c>
	/// labeled alternative in <see cref="QueryParser.greater_than"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterThanNumber([NotNull] QueryParser.GreaterThanNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>greaterThanTerm</c>
	/// labeled alternative in <see cref="QueryParser.greater_than"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterThanTerm([NotNull] QueryParser.GreaterThanTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>greaterThanEqNumber</c>
	/// labeled alternative in <see cref="QueryParser.greater_than_equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterThanEqNumber([NotNull] QueryParser.GreaterThanEqNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>greaterThanEqTerm</c>
	/// labeled alternative in <see cref="QueryParser.greater_than_equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterThanEqTerm([NotNull] QueryParser.GreaterThanEqTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessThanNumber</c>
	/// labeled alternative in <see cref="QueryParser.less_than"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessThanNumber([NotNull] QueryParser.LessThanNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessThanTerm</c>
	/// labeled alternative in <see cref="QueryParser.less_than"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessThanTerm([NotNull] QueryParser.LessThanTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessThanEqNumber</c>
	/// labeled alternative in <see cref="QueryParser.less_than_equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessThanEqNumber([NotNull] QueryParser.LessThanEqNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessThanEqTerm</c>
	/// labeled alternative in <see cref="QueryParser.less_than_equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessThanEqTerm([NotNull] QueryParser.LessThanEqTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="QueryParser.boolean_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd([NotNull] QueryParser.AndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="QueryParser.boolean_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOr([NotNull] QueryParser.OrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.nested_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNested_predicate([NotNull] QueryParser.Nested_predicateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="QueryParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] QueryParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Term</c>
	/// labeled alternative in <see cref="QueryParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] QueryParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.regexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRegexp([NotNull] QueryParser.RegexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.like"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLike([NotNull] QueryParser.LikeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.in"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIn([NotNull] QueryParser.InContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue_list([NotNull] QueryParser.Value_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.number_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber_list([NotNull] QueryParser.Number_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.term_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm_list([NotNull] QueryParser.Term_listContext context);
}
